{"version":3,"sources":["components/login/Login.jsx","components/profile/Profile.jsx","App.js","routes.js","reportWebVitals.js","store/loginReducer.js","store/authReducer.js","store/index.js","index.js"],"names":["Login","useState","login","password","form","setForm","error","setError","history","useHistory","dispatch","useDispatch","data","useSelector","state","dataLogin","useEffect","authHandler","e","target","name","value","type","placeholder","onChange","onClick","payload","push","disabled","Profile","App","routes","path","exact","to","useRoutes","newLogin","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAoDeA,EA9CD,WAEV,MAAwBC,mBAAS,CAC7BC,MAAO,GAAIC,SAAU,KADzB,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAUC,cACVC,EAAWC,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAExCC,qBAAU,WACFZ,EAAKF,QAAUU,EAAKV,OAASE,EAAKD,WAAaS,EAAKT,SACpDI,GAAS,GAEPA,GAAS,MAGnB,IAAMU,EAAc,SAACC,GACjBb,EAAQ,2BAAKD,GAAN,kBAAac,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UASjD,OACI,gCACI,uBACIC,KAAK,OACLC,YAAY,iCACZH,KAAK,QACLI,SAAU,SAAAN,GAAC,OAAID,EAAYC,MAE/B,uBACII,KAAK,WACLC,YAAY,uCACZH,KAAK,WACLI,SAAU,SAAAN,GAAC,OAAID,EAAYC,MAE/B,wBAAQO,QApBK,WACjBf,EAAS,CAAEY,KAAM,YAAaI,QAAStB,EAAKF,QAC5CQ,EAAS,CAAEY,KAAM,eAAgBI,QAAStB,EAAKD,WAC/CK,EAAQmB,KAAK,aAiBsBC,SAAUtB,EAAzC,gDCtCGuB,EAPC,SAAC,GAAa,IAAZ3B,EAAW,EAAXA,MAEd,OACI,qFAAgBA,MCcT4B,MAdf,WAEE,IACMC,ECHiB,SAAC7B,GACtB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8B,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAK,EAA5B,SACI,cAAC,EAAD,CAAS/B,MAAOA,MAEpB,cAAC,IAAD,CAAUgC,GAAG,SDNRC,CADDtB,aAAY,SAAAC,GAAK,OAAIA,EAAMsB,SAASlC,UAGlD,OACE,qBAAKmC,UAAU,MAAf,SACE,cAAC,IAAD,UACGN,OEDMO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAe,CACjB7C,MAAO,cACPC,SAAU,UCFR4C,EAAe,CACjB7C,MAAO,GACPC,SAAU,ICER6C,EAAcC,YAAgB,CAChClC,UFAwB,WAAmC,IAAlCD,EAAiC,uDAAzBiC,EACjC,OAAOjC,GEAPsB,SDDuB,WAAmC,IAAlCtB,EAAiC,uDAAzBiC,EAAcG,EAAW,uCACzD,OAAQA,EAAO5B,MACX,IAAK,YACD,OAAO,2BAAKR,GAAZ,IAAmBZ,MAAOgD,EAAOxB,UACrC,IAAK,eACD,OAAO,2BAAKZ,GAAZ,IAAmBX,SAAU+C,EAAOxB,UACxC,QACI,OAAOZ,MCHNqC,EAAQC,YAAYJ,GCAjCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJK,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.cf903e0f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [form, setForm] = useState({\r\n        login: '', password: ''\r\n    })\r\n    const [error, setError] = useState(true)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.dataLogin)\r\n\r\n    useEffect(() => {\r\n        if (form.login === data.login && form.password === data.password) {\r\n            setError(false)\r\n        }\r\n        else (setError(true))\r\n    });\r\n\r\n    const authHandler = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        dispatch({ type: \"SET_LOGIN\", payload: form.login })\r\n        dispatch({ type: \"SET_PASSWORD\", payload: form.password })\r\n        history.push('/profile')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Логин\"\r\n                name=\"login\"\r\n                onChange={e => authHandler(e)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Пароль\"\r\n                name=\"password\"\r\n                onChange={e => authHandler(e)}\r\n            />\r\n            <button onClick={loginHandler} disabled={error}>Войти</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Profile = ({login}) => {\r\n\r\n    return(\r\n        <h1>Ваш логин: {login}</h1>\r\n    )\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from './routes'\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n\n  const login = useSelector(state => state.newLogin.login)\n  const routes = useRoutes(login)\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router'\r\nimport Login from './components/login/Login'\r\nimport Profile from './components/profile/Profile'\r\n\r\nexport const useRoutes = (login) => {\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <Login />\r\n            </Route>\r\n            <Route path=\"/profile\" exact>\r\n                <Profile login={login}/>\r\n            </Route>\r\n            <Redirect to=\"/\"></Redirect>\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\r\n    login: \"developer21\",\r\n    password: \"123456\"\r\n}\r\n\r\nexport const loginReducer = (state = defaultState, action) => {\r\n    return state\r\n}","const defaultState = {\r\n    login: '',\r\n    password: ''\r\n}\r\n\r\nexport const authReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_LOGIN\":\r\n            return { ...state, login: action.payload }\r\n        case \"SET_PASSWORD\":\r\n            return { ...state, password: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers, createStore} from \"redux\"\r\nimport { loginReducer } from \"./loginReducer\"\r\nimport { authReducer } from \"./authReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    dataLogin: loginReducer,\r\n    newLogin: authReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {createStore} from 'redux'\nimport {store} from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}